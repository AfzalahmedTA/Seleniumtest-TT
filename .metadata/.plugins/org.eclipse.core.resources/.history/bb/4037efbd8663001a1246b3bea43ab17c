package firsttestngpackage;

import org.testng.annotations.Test;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeMethod;

public class NewTestExcel {
	public WebDriver driver;
	public String baseUrl="https://cabily-e.zoplay.com/admin";
	String Driverpath="C:\\Users\\user65\\Downloads\\chromedriver_win32\\chromedriver.exe";
	HSSFWorkbook workbook;
	HSSFSheet sheet;
	HSSFCell cell;
	WebDriverWait wait;
   
	
  @Test
  public void 	cabilyTestcase() throws IOException, Exception{
	  File src=new File("D:\\Afsal\\Cabilydata.xls");
      
	     
	     FileInputStream finput = new FileInputStream(src);
	      
	     
	    workbook = new HSSFWorkbook(finput);
	      
	     
	     sheet= workbook.getSheet("Sheet1");
	      
	     for(int i=15; i<=sheet.getLastRowNum(); i++)
	     {
	         // Import data for Email.
	         cell = sheet.getRow(i).getCell(0);
	         cell.setCellType(Cell.CELL_TYPE_STRING);
	         driver.findElement(By.name("admin_name")).clear();
	         Thread.sleep(1000);
	         driver.findElement(By.name("admin_name")).sendKeys(cell.getStringCellValue());
	       
	         // Import data for password.
	         cell = sheet.getRow(i).getCell(1);
	         cell.setCellType(Cell.CELL_TYPE_STRING);
	         driver.findElement(By.name("admin_password")).clear();
	         Thread.sleep(1000);
	         driver.findElement(By.name("admin_password")).sendKeys(cell.getStringCellValue());
	         wait=new WebDriverWait(driver,35);
	         WebElement cablogin=wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//form[@id='admin_login_form']//input[@class='login_btn blue_lgel']")));
	         cablogin.click();
	         String ErrorMsg=driver.findElement(By.className("default")).getText();
	         // Write data in the excel.
	       FileOutputStream foutput=new FileOutputStream(src);
	        
                   
	        // Create cell where data needs to be written.
	        sheet.getRow(i).createCell(2).setCellValue(ErrorMsg);	         
	        // finally write content
	        workbook.write(foutput);
	         
	         // close the file
	       foutput.close();
	             
	     }
	  }
	  @BeforeTest
  public void beforeTest() {
	  System.setProperty("webdriver.chrome.driver", Driverpath);
	  driver=new ChromeDriver();
	  driver.manage().window().maximize();
	  driver.manage().deleteAllCookies();
	  driver.get(baseUrl);
	  driver.manage().timeouts().implicitlyWait(20 , TimeUnit.SECONDS);
	  driver.manage().timeouts().pageLoadTimeout(25, TimeUnit.SECONDS);
	 
	  

	  
  }
	  @AfterSuite
	  public void sendmail() {
		  Properties props =new Properties();
			 
			props.put("mail.smtp.host", "smtp.gmail.com");
			props.put("mail.smtp.socketFactory.port", "465");
			props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
			props.put("mail.smtp.auth", "true");
			props.put("mail.smtp.port", "465");
			Session session = Session.getDefaultInstance(props,
					 
					new javax.mail.Authenticator() {
	 
						protected PasswordAuthentication getPasswordAuthentication() {
	 
						return new PasswordAuthentication("afsalahmd4@gmail.com", "TNo2a4689");
						}
					});
	 try {
		 Message message=new MimeMessage(session);
		 message.setFrom(new InternetAddress("afsalahmd4@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,InternetAddress.parse("afzal98ahmed@gmail.com"));
	        
	        // Add the subject link
	message.setSubject("Testing Subject");

	// Create object to add multimedia type content
	BodyPart messageBodyPart1 = new MimeBodyPart();

	// Set the body of email
	messageBodyPart1.setText("This is message body");

	// Create another object to add another content
	MimeBodyPart messageBodyPart2 = new MimeBodyPart();

	// Mention the file which you want to send
	String filename = "D:\\slm\\DemoTestNgProject\\test-output\\emailable-report.html";

	// Create data source and pass the filename
	DataSource source = new FileDataSource(filename);

	// set the handler
	messageBodyPart2.setDataHandler(new DataHandler(source));

	// set the file
	messageBodyPart2.setFileName(filename);

	// Create object of MimeMultipart class
	Multipart multipart = new MimeMultipart();

	// add body part 1
	multipart.addBodyPart(messageBodyPart2);

	// add body part 2
	multipart.addBodyPart(messageBodyPart1);

	// set the content
	message.setContent(multipart);

	// finally send the email
	Transport.send(message);

	System.out.println("=====Email Sent=====");

	} catch (MessagingException e) {

	throw new RuntimeException(e);

	}

		  
		  
		  
		  
		  
		  
	  }
@AfterTest
  public void afterTest() throws Exception{
	  Thread.sleep(1000);
	  driver.close();
	  
  }

}
